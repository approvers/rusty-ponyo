from archlinux as base
workdir /app

run echo 'Server = https://mirrors.cat.net/archlinux/$repo/os/$arch' > /etc/pacman.d/mirrorlist
run --mount=type=cache,target=/var/cache/pacman,sharing=locked \
    pacman -Syu --noconfirm --needed rustup base-devel
run rustup default stable && cargo --version
run cargo install cargo-chef

from base as plan
run --mount=type=bind,target=. cargo chef prepare --recipe-path /recipe.json


from base as build
shell ["bash", "-c"]

run --mount=type=cache,target=/var/cache/pacman,sharing=locked \
    pacman -Syu --noconfirm --needed git python3 wget unzip fontforge clang

run --mount=type=bind,source=download_font.sh,target=download_font.sh \
    ./download_font.sh

run useradd kawak -m
user kawak
run cd \
 && git clone https://gitlab.archlinux.org/archlinux/packaging/packages/gmp.git \
 && cd gmp \
 && echo 'options=(!strip staticlibs)' >> PKGBUILD \
 # && sed -i 's/--enable-fat/--enable-fat --disable-shared/' PKGBUILD \
 && MAKEFLAGS="-j$(nproc)" makepkg --skippgpcheck --nocheck --noconfirm
user root
run pacman -U --noconfirm /home/kawak/gmp/gmp-*.pkg.*

user kawak
run cd \
 && git clone https://gitlab.archlinux.org/archlinux/packaging/packages/nettle.git \
 && cd nettle \
 && echo 'options=(!strip staticlibs)' >> PKGBUILD \
 && sed -i 's/--disable-static/--disable-shared/g' PKGBUILD \
 && MAKEFLAGS="-j$(nproc)" makepkg --skippgpcheck --nocheck --noconfirm
user root
run pacman -R --noconfirm wget && pacman -U --noconfirm /home/kawak/nettle/nettle-*.pkg.*

# なんで nettle-sys の依存ライブラリ情報が伝搬せんの？？
run \
  echo 'fn main() {' > build.rs \
  && echo '  println!("cargo:rustc-link-lib=static=gmp");' >> build.rs \
  && echo '  println!("cargo:rustc-link-lib=static=nettle");' >> build.rs \
  && echo '  println!("cargo:rustc-link-lib=static=hogweed");' >> build.rs \
  && echo '}' >> build.rs

copy --from=plan /recipe.json .
run --mount=type=cache,target=/src/target/,sharing=locked \
   cargo chef cook \
      --recipe-path recipe.json \
      --release --no-default-features --features prod

copy . .

env NETTLE_STATIC=yes

run --mount=type=cache,target=/src/target/,sharing=locked \
   cargo build --release --no-default-features --features prod -vv >a 2>&1 | true

run --mount=type=cache,target=/var/cache/pacman,sharing=locked \
    pacman -Syu --noconfirm --needed neovim


# ---

# from gcr.io/distroless/cc-debian11
#
# copy --from=build /src/target/release/rusty-ponyo /
#
# cmd ["/rusty-ponyo"]
